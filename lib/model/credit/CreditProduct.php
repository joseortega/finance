<?php


/**
 * Skeleton subclass for representing a row from the 'credit_product' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sun Feb 20 16:26:32 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.credit
 */
class CreditProduct extends BaseCreditProduct 
{
  /**
   * Get arrear rates
   * 
   * @param Criteria $criteria
   * @return array object(RateUnique) 
   */
  public function getArrearRates($criteria = null) 
  {
    $rateUniques = array();
    foreach($this->getCreditProductArrearRatesJoinRateUnique($criteria) as $ref){
      $rateUniques[] = $ref->getRateUnique();
    }
    return $rateUniques;
  }

  /**
   * Get interest rates
   * 
   * @param Criteria $criteria
   * @return array object(RateUnique) 
   */
  public function getInterestRates($criteria = null) 
  {
    $rateUniques = array();
    foreach($this->getCreditProductInterestRatesJoinRateUnique() as $ref){
      $rateUniques[] = $ref->getRateUnique();
    }
    return $rateUniques;
  }
  
  /**
   * Get arrear rate current
   * 
   * @return RateUnique 
   */
  public function getArrearRateCurrent()
  {
    $criteria = new Criteria();
    $criteria->add(CreditProductArrearRatePeer::PRODUCT_ID, $this->getId(), Criteria::EQUAL);
    $criteria->addDescendingOrderByColumn(CreditProductArrearRatePeer::RATE_UNIQUE_ID);
    
    $productArrearRate = CreditProductArrearRatePeer::doSelectOne($criteria);
    
    if($productArrearRate){
      $rateUnique = $productArrearRate->getRateUnique();
    }else{
      $rateUnique = null;
    }
    
    return $rateUnique;
  }

  /**
   * Get interest rate current
   * 
   * @return RateUnique 
   */
  public function getInterestRateCurrent()
  {
    $criteria = new Criteria();
    $criteria->add(CreditProductInterestRatePeer::PRODUCT_ID, $this->getId(), Criteria::EQUAL);
    $criteria->addDescendingOrderByColumn(CreditProductInterestRatePeer::RATE_UNIQUE_ID);
    
    $productInteresRate = CreditProductInterestRatePeer::doSelectOne($criteria);
    
    if($productInteresRate){
      $rateUnique = $productInteresRate->getRateUnique();
    }else{
      $rateUnique = null;
    }
        
    return $rateUnique;
  }
  
  /**
   * Method toString
   * 
   * @return string 
   */
  public function  __toString() 
  {
    return $this->getName();
  }
} // CreditProduct
