<?php


/**
 * This class defines the structure of the 'credit' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Tue Jan  8 23:27:29 2013
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.credit.map
 */
class CreditTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.credit.map.CreditTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('credit');
		$this->setPhpName('Credit');
		$this->setClassname('Credit');
		$this->setPackage('lib.model.credit');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'BIGINT', true, null, null);
		$this->addForeignKey('PRODUCT_ID', 'ProductId', 'BIGINT', 'credit_product', 'ID', true, null, null);
		$this->addForeignKey('ASSOCIATE_ID', 'AssociateId', 'BIGINT', 'associate', 'ID', true, null, null);
		$this->addForeignKey('ACCOUNT_ID', 'AccountId', 'BIGINT', 'account', 'ID', false, null, null);
		$this->addColumn('AMOUNT', 'Amount', 'DECIMAL', true, 18, null);
		$this->addColumn('BALANCE', 'Balance', 'DECIMAL', true, 18, null);
		$this->addColumn('TIME_IN_MONTHS', 'TimeInMonths', 'INTEGER', true, null, null);
		$this->addColumn('PAY_FREQUENCY_IN_MONTHS', 'PayFrequencyInMonths', 'INTEGER', true, null, 1);
		$this->addColumn('AMORTIZATION_TYPE', 'AmortizationType', 'VARCHAR', true, 60, null);
		$this->addColumn('PURPOSE', 'Purpose', 'VARCHAR', true, 100, null);
		$this->addColumn('INTEREST_RATE', 'InterestRate', 'DECIMAL', true, 8, null);
		$this->addColumn('STATUS', 'Status', 'VARCHAR', true, 30, 'in_request');
		$this->addColumn('ISSUED_AT', 'IssuedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('DISBURSED_AT', 'DisbursedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('ANNULLED_AT', 'AnnulledAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', true, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', true, null, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
    $this->addRelation('Product', 'CreditProduct', RelationMap::MANY_TO_ONE, array('product_id' => 'id', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('Associate', 'Associate', RelationMap::MANY_TO_ONE, array('associate_id' => 'id', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('Account', 'Account', RelationMap::MANY_TO_ONE, array('account_id' => 'id', ), 'RESTRICT', 'RESTRICT');
    $this->addRelation('Transaction', 'Transaction', RelationMap::ONE_TO_MANY, array('id' => 'credit_id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('CommitteeMember', 'CommitteeMember', RelationMap::ONE_TO_MANY, array('id' => 'credit_id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('Payment', 'Payment', RelationMap::ONE_TO_MANY, array('id' => 'credit_id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('GuaranteePersonal', 'GuaranteePersonal', RelationMap::ONE_TO_MANY, array('id' => 'credit_id', ), 'CASCADE', 'RESTRICT');
    $this->addRelation('GuaranteeReal', 'GuaranteeReal', RelationMap::ONE_TO_MANY, array('id' => 'credit_id', ), 'CASCADE', 'RESTRICT');
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // CreditTableMap
