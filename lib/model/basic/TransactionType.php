<?php


/**
 * Skeleton subclass for representing a row from the 'transaction_type' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Sun Jul 17 20:02:37 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model.basic
 */
class TransactionType extends BaseTransactionType 
{
  //cosnt type
  const TYPE_CREDIT = 'credit';
  const TYPE_ACCOUNT = 'account';
  const TYPE_INVESTMENT= 'investment';
  const TYPE_GENERAL = 'general';
  
  //Const nature
  const DEBIT = 'debit';
  const CREDIT = 'credit';
  
  //Const operationType default account
  const CUSTOM = 'custom';
  
  //Const operationType account-account
  const ACCOUNT_TRANSFER_FROM_ACCOUNT = 'account_transfer_from_account';
  const ACCOUNT_TRANSFER_TO_ACCOUNT = 'account_transfer_to_account';
  
  //Const operationType account-investment
  const ACCOUNT_TRANSFER_FROM_INVESTMENT = 'account_transfer_from_investment';
  const ACCOUNT_TRANSFER_TO_INVESTMENT = 'account_transfer_to_investment';
  
  //Const operationType account-credit
  const ACCOUNT_PAYMENT_CREDIT = 'account_payment_credit';
  const ACCOUNT_DISBURSEMENT_CREDIT = 'account_disbursement_credit';
  
  //Const operationType acount-interestCapitalization
  const ACCOUNT_INTEREST_CAPITALIZATION = 'account_interest_capitalization';
  
  
  //Const operationType for credit
  const CREDIT_APPROVAL = 'credit_approval';
  const CREDIT_PAYMENT_ACCOUNT = 'credit_payment_account';
  const CREDIT_DISBURSEMENT_ACCOUNT = 'credit_disbursement_account';
  
  //Const operationType for investment
  const INVESTMENT_TRANSFER_FROM_ACCOUNT = 'investment_transfer_from_account';
  const INVESTMENT_TRANSFER_TO_ACCOUNT = 'investment_transfer_to_account';
  const INVESTMENT_INTEREST_CAPITALIZATION = 'investment_interest_capitalization';
  const INVESTMENT_WITHHOLDING_TAX = 'investment_withholding_tax';
  
  /**
   * Initializes internal state of TransactionType object.
   * 
   * @see        parent::__construct()
   */
  public function __construct()
  {
    // Make sure that parent constructor is always invoked, since that
    // is where any default values for this object are set.
    parent::__construct();
  }
 
  /**
   * Save the object
   * 
   * @param PropelPDO $con 
   */
  public function  save(PropelPDO $con = null) {

    switch ($this->getOperationType()){
      
      //for account
      
      case self::ACCOUNT_TRANSFER_FROM_ACCOUNT :
        $this->setNature(self::CREDIT);
        $this->setCashBalanceIsAffect(FALSE);
        break;

      case self::ACCOUNT_TRANSFER_TO_ACCOUNT :
        $this->setNature(self::DEBIT);
        $this->setCashBalanceIsAffect(FALSE);
         break;

      case self::ACCOUNT_TRANSFER_FROM_INVESTMENT :
        $this->setNature(self::CREDIT);
        $this->setCashBalanceIsAffect(FALSE);
        break;

      case self::ACCOUNT_TRANSFER_TO_INVESTMENT :
        $this->setNature(self::DEBIT);
        $this->setCashBalanceIsAffect(FALSE);
        break;

      case self::ACCOUNT_PAYMENT_CREDIT :
        $this->setNature(self::DEBIT);
        $this->setCashBalanceIsAffect(FALSE);
        break;

      case self::ACCOUNT_DISBURSEMENT_CREDIT :
        $this->setNature(self::CREDIT);
        $this->setCashBalanceIsAffect(FALSE);
        break;

      case self::ACCOUNT_INTEREST_CAPITALIZATION :
        $this->setNature(self::CREDIT);
        $this->setCashBalanceIsAffect(FALSE);
        break;
      
      //for credit
      
      case self::CREDIT_PAYMENT_ACCOUNT :
        $this->setNature(self::CREDIT);
        $this->setCashBalanceIsAffect(FALSE);
        break;

      case self::CREDIT_DISBURSEMENT_ACCOUNT :
        $this->setNature(self::DEBIT);
        $this->setCashBalanceIsAffect(FALSE);
         break;

      case self::CREDIT_APPROVAL :
        $this->setNature(self::CREDIT);
        $this->setCashBalanceIsAffect(FALSE);
         break;
       
       //for investment
       
      case self::INVESTMENT_TRANSFER_FROM_ACCOUNT :
        $this->setNature(self::CREDIT);
        $this->setCashBalanceIsAffect(FALSE);
        break;

      case self::INVESTMENT_TRANSFER_TO_ACCOUNT :
        $this->setNature(self::DEBIT);
        $this->setCashBalanceIsAffect(FALSE);
         break;

      case self::INVESTMENT_INTEREST_CAPITALIZATION :
        $this->setNature(self::CREDIT);
        $this->setCashBalanceIsAffect(FALSE);
        break;

      case self::INVESTMENT_WITHHOLDING_TAX :
        $this->setNature(self::DEBIT);
        $this->setCashBalanceIsAffect(FALSE);
        break;
      
      default :
        $this->setOperationType(self::CUSTOM);
    }
    parent::save($con);
  }
  
  /**
   * Method toString
   * 
   * @return type 
   */
  public function __toString() 
  {
    return $this->getConcept();
  }

} // TransactionType
